{"version":3,"sources":["data.js","components/Header.js","components/project.js","components/About.js","components/work.js","components/Contact.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["headerTagline","contactEmail","projects","id","title","imageSrc","url","social","name","Header","state","className","bottom","cascade","data","href","rel","Component","Project","this","props","src","alt","service","Work","map","project","Contact","link","index","target","Navbar","scrollToTop","scroll","activeClass","to","spy","smooth","offset","duration","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a74436d3.chunk.js","sourcesContent":["export default\n    {\n      headerTagline: [\n    'Full stack developer who likes to keep it simple and easy!',\n    ],\n    \n        contactEmail:'kirillychev.Andrew@gmail.com',\n       \n         projects:[\n           {\n            id: 1,\n            title:'Password Generator', \n             imageSrc:\"https://lh3.googleusercontent.com/zsfUNxG2Ld4F341xViwH3d_I-SKJ3cKPmywDDTZIT6Vq0WGj0RladvBZCXLM3EKXZ0F0=s156\",\n             url:'https://github.com/akirillychev/Password-Generator-Project'\n            },\n            {\n                id: 2,\n                title:'Send Foodz', \n                imageSrc:\"https://raw.githubusercontent.com/akirillychev/send-foodz/master/assets/images/home-screenshot.png\",\n                url:'https://github.com/akirillychev/send-foodz'\n               },\n            { \n                id: 3,\n                title:'Weather Dashboard', \n                imageSrc:\"https://raw.githubusercontent.com/akirillychev/Weather-Dashboard/master/assets/Capture.PNG\",\n                url:'https://github.com/akirillychev/Weather-Dashboard'\n               },\n            {\n                id: 4,\n                title: 'Refactor Project',\n                imageSrc: \"https://raw.githubusercontent.com/akirillychev/My-Refactor-Project/master/assets/refactor%20screenshot%202.PNG\",\n                url: 'https://github.com/akirillychev/My-Refactor-Project'\n           }\n        ],\n        social: [\n            \n            {   name:'Github',\n                url:'https://github.com/akirillychev'},\n            {\n                name: 'linkedin',\n                url: 'https://ch.linkedin.com/in/andrew-kirillychev-7a4aa082/de'\n            }\n\n        ]\n    }","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport data from '../data'\n\n\nclass Header extends Component {\n    state = {}\n\n    render() {\n        return (<div>\n        <h1 className='heading-background'>CREATIVE</h1>\n            <header>\n                <h1>\n                    <Fade bottom cascade>{data.name}</Fade></h1>\n            </header>\n            <Fade bottom>\n            <p className='header-title'>\n            {data.headerTagline[0]}<br></br>{data.headerTagline[1]}<br></br>\n            {data.headerTagline[2]}\n               <br></br>\n                    <button><a href={`mailto:${data.contactEmail}`} rel=\"noopener noreferrer\" >Contact</a></button>\n                </p>\n            </Fade>\n\n\n\n        </div>);\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\n\nclass Project extends Component {\n    state = {  }\n    render() { \n        return ( \n        <Fade bottom>\n        <div className='project'>\n        <a href={this.props.url}>\n            <img src={this.props.imageSrc} alt={this.props.title}></img>\n            </a>\n            <h1>{this.props.title}</h1>\n            <span>{this.props.service}</span>\n        </div> \n            </Fade>);\n    }\n}\n \nexport default Project;","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport data from '../data';\n\nclass About extends Component {\n    state = {  }\n    render() { \n        return (<div className='about'>\n            <div className='about-content'>\n            <h1><Fade bottom cascade>About.</Fade></h1>\n            <Fade bottom>\n                    <p>{data.abouttext}</p>\n            </Fade>\n            </div>\n            {data.ShowAboutImage ? <img src={data.aboutImage} alt='about iamge'></img> : null}\n            \n\n        </div>  );\n    }\n}\n \nexport default About;","import React, { Component } from 'react';\nimport Project from './project';\nimport Fade from 'react-reveal/Fade';\nimport data from '../data';\n\nclass Work extends Component {\n    state = {  }\n    render() { \n        return (<div>\n        <h1 className='heading'>\n        <Fade bottom cascade>Work.</Fade></h1>\n        <div className='work-content'>\n                {data.projects.map((project)=>(\n                    <Project key={project.id}\n                             title = {project.title}\n                             service = {project.service}\n                             imageSrc = {project.imageSrc}\n                             url={project.url}\n                     ></Project>\n                ))}\n        </div>\n        </div>  );\n    }\n}\n \nexport default Work;","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport data from '../data';\n\nclass Contact extends Component {\n    state = {  }\n    render() { \n        return (  <div>\n        <h1>\n                <Fade bottom cascade> Contact.</Fade>\n        </h1>\n        <Fade bottom>\n        <div className='contact-content'>\n                <h1>\n                You Could Contact<br></br>\n                <span className='amazing-color'>me at</span></h1>\n                    <a href={`mailto:${data.contactEmail}`} className='email'>{data.contactEmail}</a>\n                <ul>\n                    {data.social.map((link,index)=>(\n                        <li key={index}><a target='_blank' rel=\"noopener noreferrer\" href={link.url}>{link.name}</a></li>\n                    ))}   \n                </ul>\n        </div>\n        </Fade>\n\n            <span className='footer'>Andrew Kirillychev </span>\n        </div>);\n    }\n}\n \nexport default Contact;","import React, { Component } from 'react';\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nclass Navbar extends Component {\n    state = {  }\n    scrollToTop = () => {\n        scroll.scrollToTop();\n    };\n    render() { \n        return (<nav>\n            <ul>\n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"home\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                    onClick={this.scrollToTop}\n                >Home</Link></li>\n                \n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"work\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                >Projects</Link></li>\n                <li><Link\n                    className='link'\n                    activeClass=\"active\"\n                    to=\"contact\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}\n                >Contact</Link></li>\n            </ul>\n        </nav> );\n    }\n}\n \nexport default Navbar;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport About from './components/About';\nimport Work from './components/work';\nimport Contact from './components/Contact';\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <div className=\"App-header\">\n      <Header></Header>\n      </div>\n      \n      \n      <div className='work'>\n        <Work></Work>\n      </div>\n      <div className='contact'>\n        <Contact></Contact>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}